# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-06-12 20:17
from __future__ import unicode_literals

import adminsortable.fields
import blogosphere.mixins.models.admin
import blogosphere.mixins.models.image
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='ancho de la imagen')),
                ('width', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='alto de la imagen')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Punto primario de Interés (PPOI)')),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, height_field='height', help_text='Usado para ilustración.', max_length=255, upload_to=blogosphere.mixins.models.image.image_upload_to_dispatcher, verbose_name='imagen principal', width_field='width')),
                ('image_caption', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('name', models.CharField(max_length=255, verbose_name='nombre')),
                ('nickname', models.CharField(blank=True, max_length=255, verbose_name='sobrenombre')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='correo')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('date_birthday', models.DateField(blank=True, null=True, verbose_name='fecha de nacimiento')),
                ('date_death', models.DateField(blank=True, null=True, verbose_name='fecha de defunción')),
                ('slug', models.SlugField(help_text="Used to build the author's URL.", max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
            },
            bases=(models.Model, blogosphere.mixins.models.admin.AdminURLMixin),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='ancho de la imagen')),
                ('width', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='alto de la imagen')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Punto primario de Interés (PPOI)')),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, height_field='height', help_text='Usado para ilustración.', max_length=255, upload_to=blogosphere.mixins.models.image.image_upload_to_dispatcher, verbose_name='imagen principal', width_field='width')),
                ('image_caption', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('image_caption_es', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('image_caption_en', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('image_caption_fr', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('banner_height', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='ancho de la imagen')),
                ('banner_width', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='alto de la imagen')),
                ('banner_ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Punto primario de Interés (PPOI)')),
                ('banner_image', versatileimagefield.fields.VersatileImageField(blank=True, height_field='banner_height', help_text='Usado para ilustración.', max_length=255, upload_to=blogosphere.mixins.models.image.image_upload_to_dispatcher, verbose_name='banner del blog', width_field='banner_width')),
                ('banner_image_caption', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('title', models.CharField(max_length=255, verbose_name='título')),
                ('title_es', models.CharField(max_length=255, null=True, verbose_name='título')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='título')),
                ('title_fr', models.CharField(max_length=255, null=True, verbose_name='título')),
                ('slug', models.SlugField(help_text='Utilizado para construir la Url del blog.', max_length=255, unique=True, verbose_name='slug')),
                ('status', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, verbose_name='estatus')),
                ('status_es', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, null=True, verbose_name='estatus')),
                ('status_en', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, null=True, verbose_name='estatus')),
                ('status_fr', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, null=True, verbose_name='estatus')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('description_es', models.TextField(blank=True, null=True, verbose_name='descripción')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='descripción')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='descripción')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creado')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='actualizado')),
                ('featured', models.BooleanField(default=False, verbose_name='destacado')),
                ('blog_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('authors', models.ManyToManyField(related_name='blogs', to='blogs.Author', verbose_name='autores')),
            ],
            options={
                'verbose_name_plural': 'Blogs',
                'abstract': False,
                'verbose_name': 'Blog',
                'ordering': ['blog_order'],
            },
            bases=(models.Model, blogosphere.mixins.models.admin.AdminURLMixin),
        ),
        migrations.CreateModel(
            name='BlogPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.PositiveIntegerField(choices=[(0, 'Puede editar blog'), (1, 'Puede editar publicación'), (2, 'Puede editar el estatus del blog'), (3, 'Puede editar el estatus de la publicación'), (4, 'Puede editar el estatus del comentario'), (5, 'Puede eliminar blog'), (6, 'Puede eliminar publicación'), (7, 'Puede eliminar comentario'), (8, 'Puede crear referencias a otras publicaciones')], verbose_name='opción')),
            ],
            options={
                'verbose_name': 'Permiso',
                'verbose_name_plural': 'Permisos',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='título')),
                ('slug', models.SlugField(help_text="Used to build the category's URL.", max_length=255, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='blogs.Category', verbose_name='categoría padre')),
            ],
            options={
                'permissions': (('can_manage_categories', 'Puede gestionar categorías'),),
                'ordering': ['title'],
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
            },
            bases=(models.Model, blogosphere.mixins.models.admin.AdminURLMixin),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nombre')),
                ('email', models.CharField(max_length=255, verbose_name='correo')),
                ('content', models.TextField(verbose_name='comentario')),
                ('submit_day', models.DateTimeField(verbose_name='fecha')),
                ('ip', models.GenericIPAddressField(verbose_name='ip')),
                ('status', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, verbose_name='estatus')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'comentario',
                'verbose_name_plural': 'comentarios',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='ancho de la imagen')),
                ('width', models.PositiveIntegerField(blank=True, default=100, null=True, verbose_name='alto de la imagen')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Punto primario de Interés (PPOI)')),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, height_field='height', help_text='Usado para ilustración.', max_length=255, upload_to=blogosphere.mixins.models.image.image_upload_to_dispatcher, verbose_name='imagen principal', width_field='width')),
                ('image_caption', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('image_caption_es', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('image_caption_en', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('image_caption_fr', models.TextField(blank=True, help_text='Leyenda de la imagen.', null=True, verbose_name='leyenda')),
                ('title', models.CharField(max_length=255, verbose_name='título')),
                ('title_es', models.CharField(max_length=255, null=True, verbose_name='título')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='título')),
                ('title_fr', models.CharField(max_length=255, null=True, verbose_name='título')),
                ('slug', models.SlugField(help_text='Utilizado para construir la Url de la publicación.', max_length=255, verbose_name='slug')),
                ('body', models.TextField(blank=True, verbose_name='contenido')),
                ('body_es', models.TextField(blank=True, null=True, verbose_name='contenido')),
                ('body_en', models.TextField(blank=True, null=True, verbose_name='contenido')),
                ('body_fr', models.TextField(blank=True, null=True, verbose_name='contenido')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creado')),
                ('publication_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Fecha de publicación.', verbose_name='publicado')),
                ('start_publication', models.DateTimeField(blank=True, db_index=True, help_text='Fecha de inicio de publicación.', null=True, verbose_name='inicio de publicación')),
                ('end_publication', models.DateTimeField(blank=True, db_index=True, help_text='Fecha de fin de publicación.', null=True, verbose_name='fín de publicación')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='actualizado')),
                ('status', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, verbose_name='estatus')),
                ('status_es', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, null=True, verbose_name='estatus')),
                ('status_en', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, null=True, verbose_name='estatus')),
                ('status_fr', models.IntegerField(choices=[(0, 'Borrador'), (1, 'Publicado'), (2, 'Oculto')], db_index=True, default=0, null=True, verbose_name='estatus')),
                ('lead', models.TextField(blank=True, help_text='Encabezado de la publicación.', verbose_name='encabezado')),
                ('lead_es', models.TextField(blank=True, help_text='Encabezado de la publicación.', null=True, verbose_name='encabezado')),
                ('lead_en', models.TextField(blank=True, help_text='Encabezado de la publicación.', null=True, verbose_name='encabezado')),
                ('lead_fr', models.TextField(blank=True, help_text='Encabezado de la publicación.', null=True, verbose_name='encabezado')),
                ('excerpt', models.TextField(blank=True, help_text='Usado para el posicionamiento en buscadores.', verbose_name='resumen')),
                ('excerpt_es', models.TextField(blank=True, help_text='Usado para el posicionamiento en buscadores.', null=True, verbose_name='resumen')),
                ('excerpt_en', models.TextField(blank=True, help_text='Usado para el posicionamiento en buscadores.', null=True, verbose_name='resumen')),
                ('excerpt_fr', models.TextField(blank=True, help_text='Usado para el posicionamiento en buscadores.', null=True, verbose_name='resumen')),
                ('featured', models.BooleanField(default=False, verbose_name='destacado')),
                ('comment_enabled', models.BooleanField(default=True, help_text='Permite comentarios en caso de estar activado.', verbose_name='permitir comentarios')),
                ('post_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('authors', models.ManyToManyField(related_name='posts', to='blogs.Author', verbose_name='autores')),
                ('blog', adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blogs.Blog', verbose_name='blog')),
                ('categories', mptt.fields.TreeManyToManyField(blank=True, related_name='posts', to='blogs.Category', verbose_name='categorías')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referenced', to='blogs.Post', verbose_name='referencia')),
                ('related', models.ManyToManyField(blank=True, related_name='_post_related_+', to='blogs.Post', verbose_name='relacionadas')),
            ],
            options={
                'abstract': False,
                'ordering': ['post_order'],
                'verbose_name': 'Publicación',
                'verbose_name_plural': 'Publicaciones',
            },
            bases=(models.Model, blogosphere.mixins.models.admin.AdminURLMixin),
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nombre')),
                ('slug', models.SlugField(help_text='Usado para construir la URL de la fuente.', max_length=255, unique=True, verbose_name='slug')),
                ('url', models.URLField(blank=True, null=True, verbose_name='url')),
            ],
            options={
                'verbose_name': 'Fuente',
                'verbose_name_plural': 'Fuentes',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='nombre')),
            ],
            options={
                'verbose_name': 'Etiqueta',
                'verbose_name_plural': 'Etiquetas',
            },
            bases=(models.Model, blogosphere.mixins.models.admin.AdminURLMixin),
        ),
        migrations.CreateModel(
            name='UserBlogPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='blogs.Blog', verbose_name='blog')),
                ('permissions', models.ManyToManyField(related_name='permissions', to='blogs.BlogPermission', verbose_name='permisos')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_permissions', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blogs.Source', verbose_name='fuente'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='blogs.Tag', verbose_name='etiquetas'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.Post', verbose_name='publicación'),
        ),
        migrations.AlterIndexTogether(
            name='post',
            index_together=set([('status', 'publication_date', 'start_publication', 'end_publication'), ('slug', 'publication_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('parent', 'slug')]),
        ),
    ]
